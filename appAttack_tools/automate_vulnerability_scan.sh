#!/bin/bash

#source the run_tools.sh script to use its functions
source run_tools.sh
source utilities.sh

# === CONFIG ===
TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
REPORT_DIR="reports/automate_vulnerability_scan_$TIMESTAMP"
LOG_FILE="$REPORT_DIR/automate_vulnerability_scan.log"


# === HELPER FUNCTIONS ===
log() {
    echo "[$(date +"%Y-%m-%d %H:%M:%S")] $1" | tee -a "$LOG_FILE"
}

validate_url() {
    if [[ ! "$1" =~ ^https?://[a-zA-Z0-9.-]+(\:[0-9]+)?(/.*)?$ ]]; then
        echo "[!] Invalid URL format: $1" | tee -a "$LOG_FILE"
        echo "    Example of a valid URL: http://example.com or https://site.com:8080/path" | tee -a "$LOG_FILE"
        exit 1
    fi
}

validate_port() {
    if ! [[ "$1" =~ ^[0-9]+$ ]] || [ "$1" -lt 1 ] || [ "$1" -gt 65535 ]; then
        echo "[!] Invalid port number: $1" | tee -a "$LOG_FILE"
        echo "    Port must be an integer between 1 and 65535." | tee -a "$LOG_FILE"
        exit 1
    fi
}

check_tool_installed() {
    tool_name=$1
    command_to_check=$2

    if ! command -v $command_to_check &> /dev/null; then
        log "[ERROR] $tool_name is not installed. Please install it before running this script."
        exit 1
    else
        log "[INFO] $tool_name is installed."
    fi
}


# === MAIN ===
run_automated_vulnerability_scan() {
    echo "=== Automated Vulnerability Scanner ==="
    read -p "Enter the target URL (e.g., http://example.com): " TARGET_URL
    validate_url "$TARGET_URL"

    read -p "Enter the target port (e.g., 80, 443): " TARGET_PORT
    validate_port "$TARGET_PORT"

    # Create output directory
    mkdir -p "$REPORT_DIR"
    touch "$LOG_FILE"

    log "Starting vulnerability scan on $TARGET_URL:$TARGET_PORT"
    log "Reports will be saved to $REPORT_DIR"

    # Check if required tools are installed
    check_tool_installed "OWASP ZAP" "zap.sh"
    check_tool_installed "Wapiti" "wapiti"
    check_tool_installed "Nikto" "nikto"

    # --- OWASP ZAP ---
    log "Running OWASP ZAP in headless mode..."
    if run_owasp_zap_headless "$REPORT_DIR" "$TARGET_URL" "$TARGET_PORT" >> "$LOG_FILE" 2>&1; then
        log "OWASP ZAP scan completed successfully."
    else
        log "[WARNING] OWASP ZAP scan encountered issues. Check the log for details."
    fi

    # --- WAPITI ---
    log "Running Wapiti..."
    if run_wapiti_automated "$REPORT_DIR" "$TARGET_URL" >> "$LOG_FILE" 2>&1; then
        log "Wapiti scan completed successfully."
    else
        log "[WARNING] Wapiti scan encountered issues. Check the log for details."
    fi

    # --- NIKTO ---
    log "Running Nikto..."
    if run_nikto_automated "$REPORT_DIR" "$TARGET_URL" "$TARGET_PORT" >> "$LOG_FILE" 2>&1; then
        log "Nikto scan completed successfully."
    else
        log "[WARNING] Nikto scan encountered issues. Check the log for details."
    fi

    log "All scans completed. Review the reports in $REPORT_DIR"
}

run_automated_vulnerability_scan