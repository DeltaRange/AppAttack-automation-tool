#!/bin/bash

#source the run_tools.sh script to use its functions
source run_tools.sh
source utilities.sh

# === CONFIG ===
TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
REPORT_DIR="reports/automate_vulnerability_scan_$TIMESTAMP"
LOG_FILE="$REPORT_DIR/automate_vulnerability_scan.log"


# === HELPER FUNCTIONS ===
log() {
    echo "[$(date +"%Y-%m-%d %H:%M:%S")] $1" | tee -a "$LOG_FILE"
}

validate_url() {
    if [[ ! "$1" =~ ^https?://[a-zA-Z0-9.-]+(\:[0-9]+)?(/.*)?$ ]]; then
        echo "[!] Invalid URL format: $1" | tee -a "$LOG_FILE"
        echo "    Example of a valid URL: http://example.com or https://site.com:8080/path" | tee -a "$LOG_FILE"
        exit 1
    fi
}

validate_port() {
    if ! [[ "$1" =~ ^[0-9]+$ ]] || [ "$1" -lt 1 ] || [ "$1" -gt 65535 ]; then
        echo "[!] Invalid port number: $1" | tee -a "$LOG_FILE"
        echo "    Port must be an integer between 1 and 65535." | tee -a "$LOG_FILE"
        exit 1
    fi
}


# === MAIN ===
echo "=== Automated Vulnerability Scanner ==="
read -p "Enter the target URL (e.g., http://example.com): " TARGET_URL
validate_url "$TARGET_URL"

read -p "Enter the target port (e.g., 80, 443): " TARGET_PORT
validate_port "$TARGET_PORT"

# Create output directory
mkdir -p "$REPORT_DIR"
touch "$LOG_FILE"

log "Starting vulnerability scan on $TARGET_URL"
log "Reports will be saved to $REPORT_DIR"

# --- OWASP ZAP ---
log "Running OWASP ZAP in headless mode..."
run_owasp_zap_headless "$REPORT_DIR" "$URL" "$PORT" >> $LOG_FILE

# --- WAPITI ---
log "Running Wapiti..."
run_wapiti_automated "$REPORT_DIR" "$URL" >> $LOG_FILE

# --- NIKTO ---
log "Running Nikto..."
run_nikto_automated "$REPORT_DIR" "$URL:$PORT"

log "All scans completed. Review the reports in $REPORT_DIR"